swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: MetadataWrapperClient
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: atlasapiwrapper.azurewebsites.net
basePath: /
tags:
  - name: api-type-defs
    description: Api Type Defs
  - name: api-entity
    description: Operations of entity api on underline Atlas
  - name: api-relationship
    description: Api Relationship
  - name: api-search
    description: Api Search
paths:
  /:
    get:
      tags:
        - api-search
      summary: greeting
      operationId: greetingUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/entity:
    post:
      tags:
        - api-entity
      summary: Add new entity in atlas
      operationId: entityPostUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: input
          description: "{\r\n    \"entities\": [\r\n        {\r\n            \"typeName\": \"adls_gen2_resource_set\",\r\n            \"createdBy\": \"sg\",\r\n            \"attributes\": {\r\n                \"qualifiedName\": \"/2019/\",\r\n                \"name\": \"/2019/\"\r\n            }\r\n        }\r\n\t]\r\n}"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/entity/bulk:
    get:
      tags:
        - api-entity
      summary: entityBulkGet
      operationId: entityBulkGetUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: input
          description: input
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - api-entity
      summary: entityBulkPost
      operationId: entityBulkPostUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - api-entity
      summary: entityBulkDelete
      operationId: entityBulkDeleteUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/relationship:
    post:
      tags:
        - api-relationship
      summary: relationshipPost
      operationId: relationshipPostUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - api-relationship
      summary: relationshipBulkPost
      operationId: relationshipBulkPostUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/relationship/guid/{guid}':
    get:
      tags:
        - api-relationship
      summary: relationshipGUIDGet
      operationId: relationshipGUIDGetUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: guid
          in: path
          description: guid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - api-relationship
      summary: relationshipGUIDDelete
      operationId: relationshipGUIDDeleteUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: guid
          in: path
          description: guid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/search:
    get:
      tags:
        - api-search
      summary: searchBasicGet
      operationId: searchBasicGetUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: query
          in: query
          description: query
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/typedefs:
    get:
      tags:
        - api-type-defs
      summary: typedefsGet
      operationId: typedefsGetUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - api-type-defs
      summary: typedefsPost
      operationId: typedefsPostUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - api-type-defs
      summary: typedefsPut
      operationId: typedefsPutUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - api-type-defs
      summary: typedefsDelete
      operationId: typedefsDeleteUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ipJSON
          description: ipJSON
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
